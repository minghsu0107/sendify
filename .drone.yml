kind: pipeline
name: default

steps:
  - name: pycodestyle
    image: shyper/pycodestyle
    commands:
      - pycodestyle **/*.py
    when:
      event: pull_request

  - name: build-docker-image-beta
    image: plugins/docker
    settings:
      repo: harbor.linecorp.com/line-hub/tv-proxy
      registry: harbor.linecorp.com
      username:
        from_secret: username
      password:
        from_secret: password
      custom_dns: ['119.235.235.29', '203.104.131.32']
      mirror: https://docker-hub-mirror.linecorp.com/
      tags:
        - '${DRONE_COMMIT_SHA:0:8}-beta'
    when:
      event: push
      branch: master

  - name: deploy-k8s-manifesto-beta
    image: harbor.linecorp.com/line-hub/drone-update-kustomization:latest
    settings:
      repo_url: ssh://git@git-dev.linecorp.com:20022/LINE-HUB/deployment-manifests.git
      kustomization: overlay/beta
      update_image:
        - harbor.linecorp.com/line-hub/tv-proxy:${DRONE_COMMIT_SHA:0:8}-beta
    environment:
      SSH_KEY:
        from_secret: GIT_DEPLOY_LINEHUB_MANIFESTO
    when:
      event: [push]
      branch: [master]

  - name: create-release-branch
    image: docker:git
    commands:
      - git checkout -b release/${VERSION}
      - git push --set-upstream origin release/${VERSION}
      - git tag v${VERSION}
      - git push origin v${VERSION}
    when:
      event: promote
      target: RC

  - name: build-docker-image-rc
    image: plugins/docker
    settings:
      repo: harbor.linecorp.com/line-hub/tv-proxy
      registry: harbor.linecorp.com
      username:
        from_secret: username
      password:
        from_secret: password
      custom_dns: ['119.235.235.29', '203.104.131.32']
      mirror: https://docker-hub-mirror.linecorp.com/
      tags: '${DRONE_TAG}'
    when:
      event: tag
      ref:
        - refs/tags/v*

  - name: deploy-k8s-manifesto-rc
    image: harbor.linecorp.com/line-hub/drone-update-kustomization:latest
    settings:
      repo_url: ssh://git@git-dev.linecorp.com:20022/LINE-HUB/deployment-manifests.git
      kustomization: overlay/rc
      update_image:
        - harbor.linecorp.com/line-hub/tv-proxy:${DRONE_TAG}
    environment:
      SSH_KEY:
        from_secret: GIT_DEPLOY_LINEHUB_MANIFESTO
    when:
      event: tag
      ref:
        - refs/tags/v*

  - name: deploy-k8s-manifesto-production
    image: harbor.linecorp.com/line-hub/drone-update-kustomization:latest
    settings:
      repo_url: ssh://git@git-dev.linecorp.com:20022/LINE-HUB/deployment-manifests.git
      kustomization: overlay/prod
      update_image:
        - harbor.linecorp.com/line-hub/tv-proxy:${DRONE_TAG}
    environment:
      SSH_KEY:
        from_secret: GIT_DEPLOY_LINEHUB_MANIFESTO
    when:
      event: [promote]
      target:
      - PRODUCTION

  - name: create-hot-fix
    image: docker:git
    commands:
      - git tag v${VERSION}
      - git push origin v${VERSION}
    when:
      event: promote
      target: HOTFIX

  - name: notify-deploy
    image: plugins/slack
    when:
      event:
        - push
        - tag
        - promote
      branch:
        exclude:
          - feature/*
          - hotfix/*
      status:
        - failure
        - success
    settings:
      channel: line_hub_deploy
      webhook: http://ikameshi.linecorp.com/webhook/line_hub_deploy
      username: Drone
      link_names: true
      template: >
        *{{#success build.status}}Good job! <!channel|channel> {{else}}Fix me please! <!here|here>{{/success}}* <{{ build.link }}|{{ repo.owner }}/{{ repo.name }}#{{ build.number }}> (`{{ build.event }}`{{#if build.deployTo}}: *{{build.deployTo}}*{{/if}})
        Message: ${DRONE_COMMIT_MESSAGE}
        Commit: <${DRONE_REPO_LINK}/commit/{{build.commit}}|{{truncate build.commit 8}}>
        Branch: <${DRONE_REPO_LINK}/commits/{{build.branch}}|{{build.branch}}>
        Author: {{build.author}}
